2. Rendering with Ternar operator ? : 

The Ternary Operator has three parts.
First Part is the condition and if the condition is true, the result will be ?(second Part)!!!
If condition is not true the result will be :(Third Part)!!!

The advantage of the Ternary Operator is that we can display alternative after : !!!

function Menu() {
  const pizzas = pizzaData;
 // const pizzas = [];
  const numPizzas = pizzas.length;

  return (
    <main className="menu">
      <h2>Our menu</h2>

      {numPizzas > 0 ? (
        <ul className="pizzas">
          {pizzas.map((pizza) => (
            // <Pizza name={pizza.name} photoName={pizza.photoName} />
            <Pizza pizzaObj={pizza} key={pizza.name} />
          ))}
        </ul>
      ) : <p>We are still working on our menu. Please come back later.</p>}
    </main>
  );
}

function Footer() {
  const hour = new Date().getHours();
  const openHour = 10;
  const closeHour = 22;
  const isOpen = hour >= openHour && hour <= closeHour;
  console.log(isOpen);

  return (
    <footer className="footer">
      {isOpen ? (
        <div className="order">
          <p>
            We are open until {closeHour}:00. Come visit us or order online.
          </p>
          <button className="btn">Order</button>
        </div>
      ) : (
        <p>
          We are happy to wellcome you between {openHour}:00 and {closeHour}:00.
        </p>
      )}
    </footer>
    // This is the power to combine JS write into the HTML - new Date().toLocaleTimeString()
  );
  //return React.createElement("footer", null, "We are currenty open!");
}